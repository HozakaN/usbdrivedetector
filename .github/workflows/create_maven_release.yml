name: Release USB Drive Detector

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for release'
        required: true

jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8' ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Setup Github User And Release Branch
        run: |
          git config --local user.email "release-bot@users.noreply.github.com"
          git config --local user.name "release-bot"

      - name: Change Log
        run: |
          bash ${GITHUB_WORKSPACE}/.github/bashScripts/changelog.sh
          git add ${GITHUB_WORKSPACE}/CHANGELOG.md
          git commit -m "Updating change log on release branch"
          git push

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-m2

      - id: install-secret-key
        name: Install GPG secret key
        run: |
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import

      - name: Prepare Release
        run: |
          mvn -B build-helper:parse-version release:prepare \
          -DdevelopementVersion='${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.0-SNAPSHOT' \
          -Darguments="-DskipTests -Dusername=${{ github.actor }} -Dpassword=${{ github.token }}"

      - name: Publish
        run: |
          mvn -B --no-transfer-progress \
          --file pom.xml -s release/m2-settings.xml \
          release:perform -Dusername=${{ github.actor }} -Dpassword=${{ github.token }} -Darguments="-DskipTests" \
          -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} \
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # has permissions to push package to this repo
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
